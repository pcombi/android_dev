package com.softalien.englishgrammar;

import java.io.InputStream;

import android.app.Activity;
import android.content.res.Resources;
import android.graphics.Color;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.WindowManager.LayoutParams;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Toast;

public class TestsActivity extends Activity {
	
	int displayWidth = 0;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.tests);
		//initialize();
		final LinearLayout answerLayout = (LinearLayout) findViewById(R.id.lAnswers);
		String[] answerVerbs = {"go", "went", "gone", "will go", "will not go", "goes", "has gone", "has been gone", "went", "gone", "will go", "will not go", "goes", "has gone", "has been gone"};
		
		LinearLayout ll = (LinearLayout)findViewById(R.id.buttonlayout1);
		Display display = getWindowManager().getDefaultDisplay();
		displayWidth = display.getWidth();
		int currentWidth = 0;
		LinearLayout newLL = getNewLinearLayout();
		ll.addView(newLL);
		for (int i=0; i < answerVerbs.length; i++) {
			
			final String name = answerVerbs[i];
			final Button myButton = createNewButton(name);
			myButton.measure(5, 5);
			currentWidth += myButton.getMeasuredWidth();
			if (currentWidth > displayWidth) {
				newLL = getNewLinearLayout();
				ll.addView(newLL);
				currentWidth = myButton.getMeasuredWidth();
			}
			
			newLL.addView(myButton);
			//LayoutParams lp = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
			
			myButton.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					String name = myButton.getText().toString();
					if (!isButtonAlreadyClicked(name, answerLayout)) {
						Button newButton = createNewButton(name);
						answerLayout.addView(newButton);
						Toast t = Toast.makeText(TestsActivity.this, name, Toast.LENGTH_LONG);
						t.show();
					} else {
						removeButtonFromLayout(name, answerLayout);
					}
				}

			});
		}
		
	}
	private LinearLayout getNewLinearLayout() {
		LinearLayout newLL = new LinearLayout(this);
		LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(displayWidth, 63);
		newLL.setLayoutParams(params);
		newLL.setPadding(0, 5, 0, 0);
		newLL.setOrientation(LinearLayout.HORIZONTAL);
		return newLL;
	}
	
	public boolean isButtonAlreadyClicked(String name, LinearLayout layout) {
		boolean result = false;
		for (int i = 0; i < layout.getChildCount(); i++) {
			if (((Button)layout.getChildAt(i)).getText().equals(name)) {
				result = true;
				break;
			}
		}
		return result;
	}
	
	private Button createNewButton(String name) {
		Button myButton = new Button(TestsActivity.this);
		myButton.setText(name);
		return myButton;
	}
	
	private void removeButtonFromLayout(String name,
			LinearLayout layout, boolean last) {
		if (!last && name != null) {
			for (int i = 0; i < layout.getChildCount(); i++) {
				if (((Button)layout.getChildAt(i)).getText().equals(name)) {
					layout.removeViewAt(i);
				}
			}
		} else {
			
		}
	}
	public void initialize() {
		//answerLayout = (LinearLayout) findViewById(R.id.lAnswers);
	}
	
	//Resources r = this.getBaseContext().getResources();
	//myButton.setBackground(r.getDrawable(R.drawable.btn_blue));
	//or 
	//InputStream is = getResources().openRawResource(R.drawable.btn_blue);
	//myButton.setBackground(Drawable.createFromStream(is, null);
	//myButton.setBackgroundDrawable(getResources().getDrawable(R.drawable.btn_blue));
	
	//myButton.setBackgroundResource(R.drawable.btn_blue);
	
	//LayoutParams pars = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
	//myButton.setLayoutParams(pars);
	//myButton.setBackgroundColor(Color.BLUE);
	//myButton.setBackgroundColor(Color.BLUE);
}
